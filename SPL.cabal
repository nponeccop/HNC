name: SPL
version: 0.0.0.920
cabal-version: 1.23
build-type: Custom
license: LGPL
license-file: COPYING.LESSER
bug-reports: https://github.com/kayuri/HNC/issues
synopsis: A source-to-source translator of a variant of ML core into C++.
author: Andy Melnikov <andy.melnikov@gmail.com>
maintainer: Andy Melnikov <andy.melnikov@gmail.com>
homepage: https://github.com/kayuri/HNC/wiki
category: compiler
tested-with: GHC ==8.0.1
extra-source-files:
    README.md
    Bar.ag
    AG/*.ag
    uuagc_options
description:
    HNC stands for HN compiler. HN is a tool to facilitate writing
    C programs. It is a macro language for C. It is not embedded
    in C but uses a new syntax and a new type system to express C
    programs. It can be used by humans to prototype programs or
    separate functions in C or as an intermediate language
    for C generators.
source-repository head
    type: git
    location: https://github.com/kayuri/NHC.git

custom-setup
    setup-depends: uuagc-cabal, Cabal, base, uuagc

executable spl-hnc
    build-depends: HUnit, QuickCheck, base < 5,
                   bytestring, containers, directory,
                   hoopl >=3.10.1.0, mtl, parsec,
                   unification-fd >=0.10, recursion-schemes, strict,
                   transformers, safe, bifunctors, lens, adjunctions
    main-is: HNC.hs
    buildable: True
    default-language: Haskell2010
    hs-source-dirs: .
    ghc-options: -Wall -Wextra -Wno-incomplete-patterns -Wno-tabs -Wno-missing-signatures -Wno-name-shadowing -Wno-orphans -Widentities
    other-modules:
       Bar
       CPP.BackendTools
       CPP.CompileTools
       CPP.Intermediate
       CPP.TypeProducer
       CPP.Visualise
       FFI.TypeParser
       HN.Intermediate
       HN.MilnerTools
       HN.Optimizer.ArgumentDeleter
       HN.Optimizer.ArgumentValues
       HN.Optimizer.Arity
       HN.Optimizer.ClassyLattice
       HN.Optimizer.Dominator
       HN.Optimizer.ExpressionRewriter
       HN.Optimizer.FormalArgumentsDeleter
       HN.Optimizer.Frontend
       HN.Optimizer.GraphCompiler
       HN.Optimizer.GraphDecompiler
       HN.Optimizer.Inbound
       HN.Optimizer.Inliner2
       HN.Optimizer.LabelFor
       HN.Optimizer.Lattice
       HN.Optimizer.Node
       HN.Optimizer.Pass
       HN.Optimizer.SimpleAlias
       HN.Optimizer.Utils
       HN.Optimizer.Visualise
       HN.SplExport
       HN.TypeTools
       HN.Visualise
       Parser.AST
       Parser.Parser
       SPL.Types
       SPL.Visualise
       Unifier.Restricted
       Unifier.Unifier
       Utils
       Utils.Kmett
       Utils.Options

test-suite hn-tests
  type: detailed-0.9
  test-module: Test.Cabal
  build-depends: base, Cabal
  hs-source-dirs: .
  default-language: Haskell2010

executable spl-test-hunit-exe
    build-depends: HUnit, QuickCheck, base,
                   bytestring, containers, directory,
                   hoopl >=3.10.1.0, mtl, parsec, strict,
                   unification-fd >=0.10, recursion-schemes,
                   transformers, safe, bifunctors, lens, adjunctions
    main-is: Main.hs
    other-modules:
        Bar
        CPP.BackendTools
        CPP.CompileTools
        CPP.Intermediate
        CPP.TypeProducer
        CPP.Visualise
        FFI.TypeParser
        FFI.Visualise
        HN.Intermediate
        HN.MilnerTools
        HN.Optimizer.ArgumentDeleter
        HN.Optimizer.ArgumentValues
        HN.Optimizer.Arity
        HN.Optimizer.ClassyLattice
        HN.Optimizer.Dominator
        HN.Optimizer.ExpressionRewriter
        HN.Optimizer.FormalArgumentsDeleter
        HN.Optimizer.Frontend
        HN.Optimizer.GraphCompiler
        HN.Optimizer.GraphDecompiler
        HN.Optimizer.Inbound
        HN.Optimizer.Inliner2
        HN.Optimizer.LabelFor
        HN.Optimizer.Lattice
        HN.Optimizer.Node
        HN.Optimizer.Pass
        HN.Optimizer.SimpleAlias
        HN.Optimizer.Utils
        HN.Optimizer.Visualise
        HN.TypeTools
        HN.Visualise
        Parser.AST
        Parser.Parser
        SPL.Check3
        SPL.Code
        SPL.Compiler
        SPL.Interpretator
        SPL.Lib.Bignum
        SPL.Lib.Str
        SPL.Optimizer1
        SPL.Parser2
        SPL.Top
        SPL.Types
        SPL.Visualise
        Test.Compiler
        Test.FFI
        Test.HnParser
        Test.Optimizer.FileTest
        Test.Optimizer.WithParsing
        Test.ParserTest
        Test.SPL
        Test.SPLQuickCheck
        Test.TestFixtures
        Test.Tests
        Test.TypeParser
        Test.Utils
        Unifier.Restricted
        Unifier.Unifier
        Utils
        Utils.Kmett

    default-language: Haskell2010
    hs-source-dirs: . Test/src
--    ghc-options: -Wextra -fno-warn-incomplete-patterns -fno-warn-tabs -Wno-missing-local-signatures -fno-warn-missing-signatures -fno-warn-name-shadowing -fno-warn-orphans -fno-warn-unused-do-bind
    ghc-options: -Wextra -Wno-missing-signatures -Wno-name-shadowing -Wno-tabs -Wno-orphans -Wno-incomplete-patterns -Widentities

executable spli
    build-depends: HUnit, QuickCheck, base,
                   bytestring, containers, directory,
                   hoopl >=3.10.1.0, mtl, parsec,
                   unification-fd >=0.10, recursion-schemes
    main-is: SPLI.hs
    buildable: True
    default-language: Haskell2010
    hs-source-dirs: .
    ghc-options: -fno-warn-tabs
    other-modules:
        SPL.Check3
        SPL.Code
        SPL.Compiler
        SPL.Interpretator
        SPL.Lib.Bignum
        SPL.Lib.Str
        SPL.Optimizer1
        SPL.Parser2
        SPL.Top
        SPL.Types

executable splm
    build-depends: HUnit, QuickCheck, base,
                   bytestring, containers, directory,
                   hoopl >=3.10.1.0, mtl, parsec,
                   unification-fd >=0.10, recursion-schemes
    main-is: M.hs
    buildable: True
    default-language: Haskell2010
    ghc-options: -fno-warn-tabs
    hs-source-dirs: .
    ghc-options: -fno-warn-tabs
    other-modules:
        SPL.Check3
        SPL.Code
        SPL.Compiler
        SPL.Interpretator
        SPL.Lib.Bignum
        SPL.Lib.Str
        SPL.Optimizer1
        SPL.Parser2
        SPL.Top
        SPL.Types


executable spl-test-adhoc-hn
    build-depends: HUnit, QuickCheck, base,
                   bytestring, containers, directory,
                   hoopl >=3.10.1.0, mtl, parsec,
                   unification-fd >=0.10, recursion-schemes
    main-is: Test/Adhoc.hs
    buildable: True
    default-language: Haskell98
    hs-source-dirs: .
    ghc-options: -Wall -fno-warn-incomplete-patterns -fno-warn-tabs -Wno-missing-local-signatures -fno-warn-missing-signatures -fno-warn-name-shadowing -fno-warn-orphans -fno-warn-unused-do-bind
    other-modules:
        CPP.Intermediate
        CPP.Visualise
        HN.Intermediate
        HN.SplExport
        Parser.AST
        Parser.Parser
        SPL.Check3
        SPL.Code
        SPL.Compiler
        SPL.Lib.Bignum
        SPL.Lib.Str
        SPL.Optimizer1
        SPL.Parser2
        SPL.Top
        SPL.Types
        SPL.Visualise
        Test.HnParser
        Test.ParserTest
        Utils

executable spl-test-adhoc-spl
    build-depends: HUnit, QuickCheck, base,
                   bytestring, containers, directory,
                   hoopl >=3.10.1.0, mtl, parsec,
                   unification-fd >=0.10, recursion-schemes
    main-is: SPL_Tests.hs
    buildable: True
    default-language: Haskell98
    hs-source-dirs: .
    ghc-options: -fno-warn-tabs
    other-modules:
        SPL.Check3
        SPL.Code
        SPL.Compiler
        SPL.Interpretator
        SPL.Lib.Bignum
        SPL.Lib.Str
        SPL.Optimizer1
        SPL.Parser2
        SPL.Top
        SPL.Types
        Test.SPL

